server {
    root /srv/public;

    location / {
        ####### CORS section #######
        if ($request_method = 'OPTIONS') {
            include "/etc/nginx/conf.d/cors.inc";
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;

            ####### Если прилетел preflight, просто отвечаем
            access_log off;
            return 204;
        }
        ##### - CORS section - #####

        # always redirect to index.php
        try_files /dev/null /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        ####### CORS section #######
        include "/etc/nginx/conf.d/cors.inc";
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        ##### - CORS section - #####

        fastcgi_pass backend;

        # Increase the buffer size to handle large cache invalidation headers
        fastcgi_buffer_size 32k;
        fastcgi_buffers 32 4k;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi.conf;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # return payment page
    location /show {
        try_files $uri /index.html;
    }

    # Static files, allowed to serve
    location ~* \.(ico|jpg|jpeg|png|svg|css|js|map|html|otf|ttf|eot|woff|woff2)$ {
        expires 30d;
        try_files $uri =404;
    }

    # URL for health checks
    location /nginx-health {
        access_log off;
        default_type text/plain;
        return 200 "healthy\n";
    }
}
